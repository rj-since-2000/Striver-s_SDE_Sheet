class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        unordered_map<int, bool> visited;
        unordered_map<int, int> map;
        int n = nums.size();
        for (int i = 0; i < n; i++) {
            visited[nums[i]] = false;
            map[nums[i]] = 1;
        }
        int max = 0;
        for (int i = 0; i < n; i++) {
            int num = nums[i];
            if (visited[num]) continue;
            visited[num] = true;
            int count = 1;
            int left = num - 1;
            int right = num + 1;
            while (map[left] > 0) {
                count++;
                left--;
                visited[left] = true;
            }
            while (map[right] > 0) {
                count++;
                right++;
                visited[right] = true;
            }
            if (count > max) max = count;
        }
        return max;
    }
};
