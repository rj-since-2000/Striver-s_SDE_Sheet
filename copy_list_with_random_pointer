/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if (!head) return head;
        Node* newHead = new Node(head->val);
        Node* ans = newHead;
        Node* nH = newHead;
        Node* h = head;
        while (head->next) {
            newHead->next = new Node(head->next->val);
            head = head->next;
            newHead = newHead->next;
        }
        newHead->next = NULL;
        head = h;
        Node* curr = nH;
        while (head) {
            Node* random = head->random;
            Node* i = h;
            Node* j = nH;
            while (i && i != random) {
                i = i->next;
                j = j->next;
            }
            curr->random = j;
            head = head->next;
            curr = curr->next;
        }
        return ans;
    }
};
