bool isPossible(vector<int> &A, int B, int mid, int n) {
    int sum = 0;
    int count = 0;
    for (int i = 0; i < n; i++) {
        if (sum + A[i] > mid) {
            count++;
            sum = A[i];
            if (sum > mid) {
                return false;
            }
        } else {
            sum += A[i];
        }
    }
    if (count < B) return true;
    return false;
}
int Solution::books(vector<int> &A, int B) {
    int n = A.size();
    if (n < B) return -1;
    int sum = 0;
    for (int i = 0; i < n; i++) {
        sum += A[i];
    }
    int lb = sum/B;
    int ub = sum;
    while (lb <= ub) {
        int mid = (lb + ub)/2;
        bool possible = isPossible(A, B, mid, n);
        if (possible) {
            ub = mid - 1;
        } else {
            lb = mid + 1;
        }
    }
    return lb;
}
