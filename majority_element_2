class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        if (nums.size() == 1) return {nums[0]};
        int m1 = INT_MIN;
        int m2 = INT_MIN;
        int c1 = 0;
        int c2 = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] == m1) c1++;
            else if (nums[i] == m2) c2++;
            else if (c1 == 0) {
                m1 = nums[i];
                c1++;
            }
            else if (c2 == 0) {
                m2 = nums[i];
                c2++;
            }
            else {
                c1--;
                c2--;
            }
        }
        vector<int> ans;
        int count = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] == m1) count++;
        }
        if (3*count > nums.size()) ans.push_back(m1);
        count = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] == m2) count++;
        }
        if (3*count > nums.size()) ans.push_back(m2);
        return ans;
    }
};
