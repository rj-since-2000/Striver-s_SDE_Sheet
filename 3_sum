class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        vector<vector<int>> ans;
        for (int i = 0; i < nums.size(); i++) {
            int rem_sum = 0 - nums[i];
            int j = i + 1;
            int k = nums.size() - 1;
            int sum = 0;
            for (;j < k;) {
                sum = nums[j] + nums[k];
                if (sum > rem_sum) {
                    while (k - 1 >= 0 && nums[k - 1] == nums[k]) {
                        k--;
                    }
                    k--;
                } else if (sum < rem_sum) {
                    while (j + 1 < nums.size() && nums[j + 1] == nums[j]) {
                        j++;
                    }
                    j++;
                } else {
                    vector<int> temp;
                    temp.push_back(nums[i]);
                    temp.push_back(nums[j]);
                    temp.push_back(nums[k]);
                    ans.push_back(temp);
                    while (j + 1 < nums.size() && nums[j + 1] == nums[j]) {
                        j++;
                    }
                    j++;
                }
            }
            while (i + 1 < nums.size() && nums[i + 1] == nums[i]) {
                i++;
            }
        }
        return ans;
    }
};
