class Solution {
public:
    void combination(vector<int>& candidates, int target, vector<vector<int>> &ans, vector<int> &temp, int i) {
        if (target == 0) {
            ans.push_back(temp);
            return;
        }
        if (i == candidates.size() || target < 0) return;
        for (int j = i; j < candidates.size(); j++) {
            if (j != i && candidates[j] == candidates[j - 1]) continue;
            temp.push_back(candidates[j]);
            combination(candidates, target - candidates[j], ans, temp, j + 1);
            temp.pop_back();
        }    
}    
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> temp;
        sort(candidates.begin(), candidates.end());
        combination(candidates, target, ans, temp, 0);
        return ans;
    }
};
