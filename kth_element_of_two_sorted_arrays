class Solution{
    public:
    int kthElement(int arr1[], int arr2[], int n, int m, int k)
    {
        if (n > m) return kthElement(arr2, arr1, m, n, k);
        int l1, l2, r1, r2;
        int lb = max(0, k - m);
        int ub = min(n, k);
        while (lb <= ub) {
            int mid1 = (lb + ub)/2;
            int mid2 = k - mid1;
            l1 = mid1 == 0 ? INT_MIN : arr1[mid1 - 1];
            l2 = mid2 == 0 ? INT_MIN : arr2[mid2 - 1];
            r1 = mid1 == n ? INT_MAX : arr1[mid1];
            r2 = mid2 == m ? INT_MAX : arr2[mid2];
            if (l1 <= r2 && l2 <= r1) {
                return max(l1, l2);
            } else if (l1 > r2) {
                ub = mid1 - 1;
            } else if (l2 > r1) {
                lb = mid1 + 1;
            }
        }
    }
};
