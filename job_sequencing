class Solution 
{
    public:
    static bool sortProfit(const Job &j1, const Job &j2) {
        return j1.profit > j2.profit;
    }
    public:
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        sort(arr, arr + n, sortProfit);
        vector<int> seq(101, 0);
        int profit = 0;
        int jobs = 0;
        for (int i = 0; i < n; i++) {
            int j = arr[i].dead;
            while (j > 0 && seq[j] > 0) {
                j--;
            }
            if (j > 0) {
                seq[j] = arr[i].id;
                profit += arr[i].profit;
                jobs++;
            }
        }
        vector<int> ans;
        ans.push_back(jobs);
        ans.push_back(profit);
        return ans;
    } 
};
