/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (!head || !head->next) return head;
        ListNode* i = head;
        ListNode* j = head;
        ListNode* temp;
        int n = 0;
        while (i) {
            n++;
            i = i->next;
        }
        k = k%n;
        i = head;
        int c = 0;
        if (k == 0) return head;
        while (j->next) {
            if (c >= k) {
                i = i->next;
            }
            j = j->next;
            c++;
        }
        temp = i->next;
        i->next = NULL;
        j->next = head;
        return temp;
    }
};
