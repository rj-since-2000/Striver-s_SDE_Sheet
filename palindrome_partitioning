class Solution {
public:
    bool isPalindrome(string s) {
        int i = 0;
        int j = s.size() - 1;
        while (s[i] == s[j] && i < j) {
            i++;
            j--;
        }
        if (i < j) return false;
        return true;
    }
public:
    void part(string s, vector<vector<string>> &ans, vector<string> &temp, int i) {
        if (i == s.size()) {
            ans.push_back(temp);
        }
        for (int j = i; j < s.size(); j++) {
            string t = s.substr(i, j - i + 1);
            if (isPalindrome(t)) {
                temp.push_back(t);
                part(s, ans, temp, j + 1);
                temp.pop_back();
            }
        }
    }
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> temp;
        part(s, ans, temp, 0);
        return ans;
    }
};
