/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int l1 = 0;
        int l2 = 0;
        ListNode *heada = headA;
        ListNode *headb = headB;
        while (heada || headb) {
            if (heada) {
                l1++;
                heada = heada->next;
            }
            if (headb) {
                l2++;
                headb = headb->next;
            }
        }
        int d = abs(l1 - l2);
        if (l1 > l2) {
            while (d > 0) {
                headA = headA->next;
                d--;
            }
        } else {
            while (d > 0) {
                headB = headB->next;
                d--;
            }
        }
        while (headA) {
            if (headA == headB) {
                return headA;
            }
            headA = headA->next;
            headB = headB->next;
        }
        return NULL;
    }
};
