class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        vector<int> lmin;
        vector<int> rmin;
        stack<int> st;
        for (int i = 0; i < heights.size(); i++) {
            while (!st.empty() && heights[st.top()] >= heights[i]) {
                st.pop();
            }
            if (st.empty()) {
                lmin.push_back(-1);
            } else {
                lmin.push_back(st.top());
            }
            st.push(i);
        }
        stack<int> st2;
        for (int i = heights.size() - 1; i >= 0; i--) {
            while (!st2.empty() && heights[st2.top()] >= heights[i]) {
                st2.pop();
            }
            if (st2.empty()) {
                rmin.push_back(heights.size());
            } else {
                rmin.push_back(st2.top());
            }
            st2.push(i);
        }
        reverse(rmin.begin(), rmin.end());
        int maxA = 0;
        int area = 0;
        for (int i = 0; i < heights.size(); i++) {
            area = (rmin[i] - lmin[i] - 1)*heights[i];
            if (area > maxA) maxA = area;
        }
        return maxA;
    }
};
