class Solution{

  public:
  static int minC(int coins[], int M, int V, int j, vector<vector<int>> &dp) {
      if (V == 0) return dp[V][j] = 0;
      if (j == M || V < 0) return INT_MAX - 1;
      if (dp[V][j] > -1) return dp[V][j];
      int temp2 = minC(coins, M, V, j + 1, dp);
      int temp1 = 1 + minC(coins, M, V - coins[j], j, dp);
      return dp[V][j] = min(temp1, temp2);
  }
    
	public:
	int minCoins(int coins[], int M, int V) 
	{ 
	    sort(coins, coins + M);
	    reverse(coins, coins + M);
	    vector<vector<int>> dp;
	    for (int i = 0; i <= V; i++) {
	        vector<int> temp;
	        for (int j = 0; j <= M; j++) {
	            temp.push_back(-1);
	        }
	        dp.push_back(temp);
	    }
	    int ans = minC(coins, M, V, 0, dp);
	    if (ans >= INT_MAX - 1) return -1;
	    return ans;
	} 
};
